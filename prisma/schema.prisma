generator client {
  provider = "prisma-client-js"
}

generator typescriptInterfaces {
  provider = "prisma-generator-typescript-interfaces"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id    String @id @default(uuid())
  email String @unique
  name  String?
  image String?
}

// schema.prisma

model Form {
  id          Int             @id @default(autoincrement())
  thumbnail   String
  title       String
  description String?
  createDate  DateTime
  changeDate  DateTime
  questions   Question[]
  responses   Response[]
}

model Question {
  id          Int             @id @default(autoincrement())
  name        String
  description String?
  type        QuestionType
  options     Option[]
  required    Boolean
  validation  String?         // Optional field for validation pattern
  message     Json?
  createDate  DateTime
  changeDate  DateTime
  formId      Int
  form        Form            @relation(fields: [formId], references: [id])
}

model Option {
  id          Int             @id @default(autoincrement())
  index          Int  
  value       String
  questionsId      Int
  questions        Question            @relation(fields: [questionsId], references: [id])
}

model Response {
  id          Int             @id @default(autoincrement())
  name        String
  value       Json
  formId      Int
  form        Form            @relation(fields: [formId], references: [id])
}

enum QuestionType {
  short_answer
  paragraph
  multiple_choice
  checkboxes
  dropdown
  file_upload
  linear_scale
  rating
  multiple_choice_grid
  checkbox_grid
  date
  time
}
